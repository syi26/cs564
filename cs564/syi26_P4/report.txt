## basic information
- name: Sirui Yi
- netid: syi26


## query 2 
- A Description of how you optimize the query

For this query, I did not use any index, rather, I used left outer join for each of the tables. This strategy reduces 
the number of rows in the final table generated by full join to be much smaller, So that any search would take less time 
in this table.

- The optimized query shows 95.22 % improvement over baseline. 


## query 3
- A Description of how you optimize the query

For this query, I did no change to the origin query, but I added three indices for this one:
* for table CUSTOMER, I created a key indexing on C_MKTSEGMENT and C_CUSTKEY, with C_MKTSEGMENT
  in the front;
* for table LINEITEM, I created a key indexing on L_ORDERKEY and L_SHIPDATE;
* for table ORDERS, I created a key indexing on O_CUSTKEY, O_ORDERKEY and O_ORDERDATE;
Basically, the idea is to index all what is used in the WHERE clause.

- The optimized query shows 76.92 % improvement over baseline. 


## query 4 
- A Description of how you optimize the query

For this query, firstly I changed the SELECT * clause to SELECT L_SHIPDATE, L_COMMITDATE, L_RECEIPTDATE
because the query wants to check if the O_ORDERDATE is present in the table, LINEITEM. Since the only 
columns that have a data type of DATE are L_SHIPDATE, L_COMMITDATE, L_RECEIPTDATE, I think that by only 
selecting these three columns, we could achieve exactly the same result. Then, I added two indices for 
this query:
* for table ORDERS: I created a key indexing on O_ORDERDATE and O_ORDERPRIORITY;
* for table LINEITEM: I created a key indexing on L_ORDERKEY, L_COMMITDATE, L_RECEIPTDATE;
Basically, the idea is to index all what is used in the WHERE clause.

- The optimized query shows 64.84 % improvement over baseline. 


Declaration:
1. The strategy of creating index is used on query3_opt and query4_opt;
2. The strategy of different join plan is used on query2_opt;
3. The strategy of truncating size of table is used on query4_opt;
4. Results are exactly the same with that before processing;
5. Totally there are 2 indices on ORDERS, 2 on LINEITEM, and 1 on CUSTOMER, all within 3.